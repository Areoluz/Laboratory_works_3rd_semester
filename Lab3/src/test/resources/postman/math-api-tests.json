{
	"info": {
		"name": "Math API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Math Operations",
			"item": [
				{
					"name": "Calculate Expression",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "2 + 2 * 3"
						},
						"url": {
							"raw": "{{baseUrl}}/api/math/calculate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "math", "calculate"]
						}
					},
					"test": {
						"script": {
							"exec": [
								"pm.test('Status code is 200', function () {",
								"    pm.response.to.have.status(200);",
								"});",
								"",
								"pm.test('Result is correct', function () {",
								"    const response = pm.response.json();",
								"    pm.expect(response.result).to.equal(8);",
								"});"
							]
						}
					}
				},
				{
					"name": "Calculate Square Root",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/math/sqrt/16",
							"host": ["{{baseUrl}}"],
							"path": ["api", "math", "sqrt", "16"]
						}
					},
					"test": {
						"script": {
							"exec": [
								"pm.test('Status code is 200', function () {",
								"    pm.response.to.have.status(200);",
								"});",
								"",
								"pm.test('Result is correct', function () {",
								"    const response = pm.response.json();",
								"    pm.expect(response.result).to.equal(4);",
								"});"
							]
						}
					}
				},
				{
					"name": "Calculate Power",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/math/power?base=2&exponent=3",
							"host": ["{{baseUrl}}"],
							"path": ["api", "math", "power"],
							"query": [
								{
									"key": "base",
									"value": "2"
								},
								{
									"key": "exponent",
									"value": "3"
								}
							]
						}
					},
					"test": {
						"script": {
							"exec": [
								"pm.test('Status code is 200', function () {",
								"    pm.response.to.have.status(200);",
								"});",
								"",
								"pm.test('Result is correct', function () {",
								"    const response = pm.response.json();",
								"    pm.expect(response.result).to.equal(8);",
								"});"
							]
						}
					}
				}
			]
		},
		{
			"name": "Logs",
			"item": [
				{
					"name": "Get All Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/logs",
							"host": ["{{baseUrl}}"],
							"path": ["api", "logs"]
						}
					},
					"test": {
						"script": {
							"exec": [
								"pm.test('Status code is 200', function () {",
								"    pm.response.to.have.status(200);",
								"});",
								"",
								"pm.test('Response is array', function () {",
								"    const response = pm.response.json();",
								"    pm.expect(response).to.be.an('array');",
								"});"
							]
						}
					}
				},
				{
					"name": "Get Logs by Operation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/logs/SQRT",
							"host": ["{{baseUrl}}"],
							"path": ["api", "logs", "SQRT"]
						}
					},
					"test": {
						"script": {
							"exec": [
								"pm.test('Status code is 200', function () {",
								"    pm.response.to.have.status(200);",
								"});",
								"",
								"pm.test('Response is array', function () {",
								"    const response = pm.response.json();",
								"    pm.expect(response).to.be.an('array');",
								"});"
							]
						}
					}
				},
				{
					"name": "Clear Logs",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/logs",
							"host": ["{{baseUrl}}"],
							"path": ["api", "logs"]
						}
					},
					"test": {
						"script": {
							"exec": [
								"pm.test('Status code is 200', function () {",
								"    pm.response.to.have.status(200);",
								"});"
							]
						}
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}
